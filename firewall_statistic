#!/usr/bin/perl -w
# Copyright (C) 2010  Raptor 2101 [raptor2101@gmx.de]
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>. 
#
# A plugin to monitor absolute numbers of dropped packages
# a rule with target LOG and massage containing INPUT/OUTPUT/FORWARD is needed
use strict;

my $iptables="/sbin/iptables";

if(not defined ($ARGV[0])) 
{                             
  $ARGV[0] = "";                           
                                           
}

if($ARGV[0] eq "config") {
  printf "graph_title Packages Dropped\n";
  printf "graph_args --base 1000\n";
  printf "graph_scale yes\n";
  printf "graph_category security\n";
  
  printf "input.label Input dropped\n";
  printf "input.type GAUGE\n";
  
  printf "output.label Output dropped\n";                                                                                        
  printf "output.type GAUGE\n";
  
  printf "forward.label forward dropped\n";                                                                                        
  printf "forward.type GAUGE\n";
}
else {
  open (my $output, $iptables." -L -v -n|") or die "Can't query IPTables";
  while(<$output>) {
    if($_ =~ /(\d+).+LOG.+LOG.+Input/){
      print "input.value ".$1."\n";
    }	
    if($_ =~ /(\d+).+LOG.+LOG.+Output/){
      print "output.value ".$1."\n";
    }
    if($_ =~ /(\d+).+LOG.+LOG.+Forward/){
      print "forward.value ".$1."\n";
    }
  }
  system($iptables." -Z");
}

